plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(binwidth = 1, stackdir = "centerwhole", stackgroups = TRUE, binpositions = "all", dotsize = .75) +
geom_text(data = subset(cumulative_wins_age, age > 30),
aes(age, label = name)) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(binwidth = 1, stackdir = "centerwhole", stackgroups = TRUE, binpositions = "all", dotsize = .75) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole", stackgroups = TRUE, binpositions = "all", dotsize = .75) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole", stackgroups = TRUE, binpositions = "all", dotsize = .75, stackratio = 1.1) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole", stackgroups = TRUE, binpositions = "all", dotsize = .75, stackratio = 1.05) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole",
stackgroups = TRUE, binpositions = "all", dotsize = .75) +
labs(title = "Is it too late to win your first Grand Slam title?",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg2 <- ggplot(rolling_win_pct, aes(x = age, y = cum_pct)) +
geom_smooth() +
theme_minimal() +
scale_y_continuous(labels = scales::percent) +
labs(title = "Quite Possibly",
y = "Percent of Winners Older Than You",
x = "Your Age",
caption = "Source: TidyTuesday") +
theme(text = element_text(size = 16, family = "Roboto Condensed"),
plot.title = element_text(hjust = 0.5))
gg2
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole",
stackgroups = TRUE, binpositions = "all", dotsize = .75) +
labs(title = "Is it too late to win your first Grand Slam title?",
subtitle = "Age of first-time champs",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "top")
gg
gg <- ggplot(cumulative_wins_age, aes(x = age, fill = grand_slam.x, color = grand_slam.x)) +
geom_dotplot(method = "histodot", binwidth = 1, stackdir = "centerwhole",
stackgroups = TRUE, binpositions = "all", dotsize = .75) +
labs(title = "Is it too late to win your first Grand Slam title?",
subtitle = "Age of first-time champs",
x = "Age",
caption = "Source: #TidyTuesday") +
scale_fill_viridis_d()+
scale_color_viridis_d(guide = FALSE) +
guides(fill = guide_legend(title = "Venue")) +
theme_minimal() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text=element_text(size = 16, family="Roboto Condensed"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "bottom")
gg
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown::shortcode('tweet', '1117217377815425024')
student_ratio <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-07/student_teacher_ratio.csv")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(tidyverse)
read_csv("/static/data/session_data.csv")
read_csv("static/data/session_data.csv")
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- read_csv("static/data/session_data.csv")
bill_data
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status = "Del to Gov" | startsWith("C"), "yes", "no"))
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith("C"), "yes", "no"))
?if_else
bill_data <- bill_data %>%
mutate(billpassed = ifelse(Status == "Del to Gov" | startsWith("C"), "yes", "no"))
bill_data
bill_data <- bill_data %>%
mutate
bill_data <- bill_data %>%
mutate(billpassed = "yes")
bill_data
library(tidyverse)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov","yes", "no"))
bill_data
Status
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no"))
bill_data$billpassed
bill_data
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Title, Veto, `Original Sponsor`, billpassed)
bill_data
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title, Veto, `Original Sponsor`, billpassed)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title, Veto, `Original Sponsor`, billpassed)
bill_data
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
bill_data
sponsor_record <- bill_data %>%
group_by(`Original Sponsor`) %>%
tally(billpassed)
sponsor_record
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
sponsor_record <- bill_data %>%
group_by(`Original Sponsor`) %>%
tally(billpassed)
sponsor_record
bill_data <- bill_data %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed)
sponsor_record
print(sponsor_record, n = Inf)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
seperate(Bill, c("prefix", "bill_number", sep = " ")) %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
library(tidyverse)
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number", sep = " ")) %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
bill_data
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(Bill, Status, Title,`Original Sponsor`, billpassed)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed)
bill_data
print(bill_data, n = Inf)
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed)
bill_data
print(bill_data, n = 20)
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number))
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number))
print(bill_data, n = 20)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(desc(bill_number))
print(bill_data, n = 20)
print(bill_data, n = 30)
bill_data <- read_csv("static/data/session_data.csv")
bill_data
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number))
print(bill_data, n = 30)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(prefix, bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number))
print(bill_data, n = 30)
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(prefix, bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number)) %>%
filter(bill_number == 1020)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(prefix, bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
arrange(!desc(bill_number)) %>%
filter(bill_number == 1020)
bill_data
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
distinct()
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
distinct()
bill_data
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed)
sponsor_record
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed)
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, yes, no)
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(yes, no)
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, n)
sponsor_record
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, n) %>%
mutate(pct_passed = yes / (yes + no))
sponsor_record
bill_data <- read_csv("../static/data/session_data.csv")
library(tidyverse)
blogdown:::serve_site()
bill_data <- read_csv("../../static/data/session_data.csv")
bill_data <- read_csv("static/data/session_data.csv")
hist(sponsor_record)
library(tidyverse)
bill_data <- read_csv("static/data/session_data.csv")
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"yes", "no")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
distinct()
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, n) %>%
mutate(pct_passed = yes / (yes + no))
hist(sponsor_record)
hist(sponsor_record, pct_passed)
hist(sponsor_record$pct_passed)
hist(log(sponsor_record$pct_passed))
hist(sqrt(sponsor_record$pct_passed))
hist(sponsor_record$pct_passed)
install.packages("stats4")
# log-likelihood function
ll <- function(alpha, beta) {
x <- career_filtered$H
total <- sponsor_record$pct_passed
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m) alpha0 <- ab[1]
beta0 <- ab[2]
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, n) %>%
mutate(tot_bills = yes + no,
pct_passed = yes / (tot_bills))
sponsor_record
# log-likelihood function
ll <- function(alpha, beta) {
x <- sponsor_record$yes
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m) alpha0 <- ab[1]
beta0 <- ab[2]
# log-likelihood function
ll <- function(alpha, beta) {
x <- sponsor_record$yes
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m) alpha0 <- tot_bills[1]
beta0 <- tot_bills[2]
ll <- function(alpha, beta) {
x <- sponsor_record$yes
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinom.tot_bills(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m) alpha0 <- tot_bills[1]
beta0 <- tot_bills[2]
ll <- function(alpha, beta) {
x <- sponsor_record$yes
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m) alpha0 <- ab[1]
beta0 <- ab[2]
ll <- function(alpha, beta) {
x <- sponsor_record$yes
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m)
alpha0 <- ab[1]
beta0 <- ab[2]
library(tidyverse)
library(here)
library(stats4)
library(VGAM)
bill_data <- read_csv(here("static/data/session_data.csv"))
bill_data <- bill_data %>%
separate(Bill, c("prefix", "bill_number"), sep = " ") %>%
mutate(billpassed = if_else(Status == "Del to Gov" | startsWith(Status, "C"),"passed", "not_passed")) %>%
select(bill_number, Status, Title,`Original Sponsor`, billpassed) %>%
distinct()
sponsor_record <- bill_data %>%
count(`Original Sponsor`, billpassed) %>%
spread(billpassed, n) %>%
mutate(passed = replace_na(passed, 0),
not_passed = replace_na(not_passed, 0),
tot_bills = passed + not_passed,
pct_passed = passed / (tot_bills))
#prior estimation
hist(sponsor_record$pct_passed)
# log-likelihood function
ll <- function(alpha, beta) {
x <- sponsor_record$passed
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinot_passedm.ab(x, total, alpha, beta, log = TRUE))
}
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
ab <- coef(m)
alpha0 <- ab[1]
beta0 <- ab[2]
z <- seq(0,1,length=21)
beta_dist <- data.frame(cbind(z, dbeta(z,alpha0,beta0)))
colnames(beta_dist) <- c("x", "value")
g <- ggplot(beta_dist, aes(x, value)) +
geom_line()
print(g)
bills_eb <- sponsor_record %>%
mutate(eb_estimate = (passed + alpha0) / (tot_bills + alpha0 + beta0),
delta = pct_passed-eb_estimate) %>%
arrange(desc(eb_estimate))
# maximum likelihood estimation
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B", lower = c(0.0001, .1))
# log-likelihood function
ll <- function(alpha, beta) {
x <- sponsor_record$passed
total <- sponsor_record$tot_bills
-sum(VGAM::dbetabinot_passedm.ab(x, total, alpha, beta, log = TRUE))
}
?dbetabinot_passedm.ab
blogdown:::serve_site()
